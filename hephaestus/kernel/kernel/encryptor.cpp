/**
* encrypor.cpp
*
* @description:
*
* @author: Tankle L.
* @date: June 5th, 2016
*
* @namespace:
*
*/

#include "precompile.h"
#include "encryptor.h"

using namespace Hephaestus;

// //////////////////////////////////////////////////////////////////////////////////////////////////
// PublicKey

PublicKey::~PublicKey()
{

}

// PublicKey
// //////////////////////////////////////////////////////////////////////////////////////////////////



// //////////////////////////////////////////////////////////////////////////////////////////////////
// ECC_PublicKey

ECC_PublicKey::~ECC_PublicKey()
{

}

void* ECC_PublicKey::GetKey() const
{
	return nullptr;
}

// ECC_PublicKey
// //////////////////////////////////////////////////////////////////////////////////////////////////


// //////////////////////////////////////////////////////////////////////////////////////////////////
// Encryptor

Encryptor::~Encryptor()
{
	
}

// Encryptor
// //////////////////////////////////////////////////////////////////////////////////////////////////


// //////////////////////////////////////////////////////////////////////////////////////////////////
// ECC_Alpha_Encryptor

ECC_Alpha_Encryptor::~ECC_Alpha_Encryptor()
{

}

void ECC_Alpha_Encryptor::Encrypt(std::string& output, const std::string& origin, PublicKey const * const pPublicKey) const
{

}

void ECC_Alpha_Encryptor::Decrypt() const
{

}

// ECC_Alpha_Encryptor
// //////////////////////////////////////////////////////////////////////////////////////////////////


uECC_Curve ECC_Alpha_Encryptor::_curve = uECC_secp160r1();